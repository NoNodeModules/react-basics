{"version":3,"sources":["components/Card/Card.js","App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","className","alt","src","App","useState","data","setData","input","setInput","originalData","setOriginalData","useEffect","patt","RegExp","value","filter","word","test","toLowerCase","console","log","axios","get","then","response","type","placeholder","autocomplete","onChange","e","target","length","map","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAeeA,MAZf,YAA6B,IAAbC,EAAY,EAAZA,GAAIC,EAAQ,EAARA,KAClB,OACE,sBAAKC,UAAU,OAAf,UACE,uBACA,qBAAKC,IAAI,GAAGC,IAAG,kDAA6CJ,EAA7C,UACf,uBACA,+BAAKC,EAAL,OACA,yBALyBD,I,MC+ChBK,MA/Cf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAwCJ,mBAAS,IAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KAsBA,OAhBAC,qBAAU,WACR,IAAIC,EAAO,IAAIC,OAAJ,UAAcN,IACrBO,EAAQL,EAAaM,QAAO,SAACC,GAAD,OAC9BJ,EAAKK,KAAKD,EAAKjB,KAAKmB,kBAEtBZ,GAAQ,SAACD,GAAD,OAAUS,KAClBK,QAAQC,IAAIb,KACX,CAACA,IAEJI,qBAAU,WACRU,IAAMC,IAAI,8CAA8CC,MAAK,SAACC,GAC5DlB,GAAQ,SAACD,GAAD,OAAUmB,EAASnB,QAC3BK,GAAgB,SAACD,GAAD,OAAkBe,EAASnB,aAE5C,IAGD,sBAAKL,UAAU,kBAAf,UACE,sBAAKA,UAAU,cAAf,UACE,6EACA,uBACEyB,KAAK,OACLC,YAAY,kBACZC,aAAa,MACb5B,KAAK,OACL6B,SA7Bc,SAACC,GACrBrB,GAAS,SAACD,GAAD,OAAWsB,EAAEC,OAAOhB,MAAMI,uBA+BjC,qBAAKlB,UAAU,gBAAf,SACGK,EAAK0B,OAAS,EACb1B,EAAK2B,KAAI,SAACC,GAAD,OAAa,cAAC,EAAD,CAAMnC,GAAImC,EAAQnC,GAAIC,KAAMkC,EAAQlC,UAC1D,0ECjCKmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.11b5aee5.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Card.css\";\n\nfunction Card({ id, name }) {\n  return (\n    <div className=\"item\" key={id}>\n      <br />\n      <img alt=\"\" src={`https://randomuser.me/api/portraits/men/${id}.jpg`} />\n      <br />\n      <h4>{name} </h4>\n      <br />\n    </div>\n  );\n}\n\nexport default Card;\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Card from \"./components/Card/Card\";\nimport \"./App.css\";\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [input, setInput] = useState([]);\n  const [originalData, setOriginalData] = useState([]);\n\n  const changeHandler = (e) => {\n    setInput((input) => e.target.value.toLowerCase());\n  };\n\n  useEffect(() => {\n    var patt = new RegExp(`${input}`);\n    let value = originalData.filter((word) =>\n      patt.test(word.name.toLowerCase())\n    );\n    setData((data) => value);\n    console.log(input);\n  }, [input]);\n\n  useEffect(() => {\n    axios.get(\"https://jsonplaceholder.typicode.com/users\").then((response) => {\n      setData((data) => response.data);\n      setOriginalData((originalData) => response.data);\n    });\n  }, []);\n\n  return (\n    <div className=\"searchContainer\">\n      <div className=\"alignCenter\">\n        <h3>A Simple Example to List & Search Usernames</h3>\n        <input\n          type=\"text\"\n          placeholder=\"Search the list\"\n          autocomplete=\"off\"\n          name=\"name\"\n          onChange={changeHandler}\n        />\n      </div>\n      <div className=\"dataContainer\">\n        {data.length > 0  ?\n          data.map((element) => <Card id={element.id} name={element.name} />) :\n          <h4>No Users match the search criteria</h4>  \n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}