{"ast":null,"code":"import _slicedToArray from\"/Users/lakshmanan/Desktop/Learning/list_and_search/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from\"react\";import axios from\"axios\";import Card from\"./components/Card/Card\";import\"./App.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),input=_useState4[0],setInput=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),originalData=_useState6[0],setOriginalData=_useState6[1];var changeHandler=function changeHandler(e){setInput(function(input){return e.target.value.toLowerCase();});};useEffect(function(){var patt=new RegExp(\"\".concat(input));var value=originalData.filter(function(word){return patt.test(word.name.toLowerCase());});setData(function(data){return value;});console.log(input);},[input]);useEffect(function(){axios.get(\"https://jsonplaceholder.typicode.com/users\").then(function(response){setData(function(data){return response.data;});setOriginalData(function(originalData){return response.data;});});},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"searchContainer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"alignCenter\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"A Simple Example to List & Search Usernames\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search the list\",autocomplete:\"off\",name:\"name\",onChange:changeHandler})]}),/*#__PURE__*/_jsx(\"div\",{className:\"dataContainer\",children:data.length>0?data.map(function(element){return/*#__PURE__*/_jsx(Card,{id:element.id,name:element.name});}):/*#__PURE__*/_jsx(\"h4\",{children:\"No Users match the search criteria\"})})]});}export default App;","map":{"version":3,"sources":["/Users/lakshmanan/Desktop/Learning/list_and_search/src/App.js"],"names":["useState","useEffect","axios","Card","App","data","setData","input","setInput","originalData","setOriginalData","changeHandler","e","target","value","toLowerCase","patt","RegExp","filter","word","test","name","console","log","get","then","response","length","map","element","id"],"mappings":"yKAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAO,WAAP,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,CACb,cAAwBJ,QAAQ,CAAC,EAAD,CAAhC,wCAAOK,IAAP,eAAaC,OAAb,eACA,eAA0BN,QAAQ,CAAC,EAAD,CAAlC,yCAAOO,KAAP,eAAcC,QAAd,eACA,eAAwCR,QAAQ,CAAC,EAAD,CAAhD,yCAAOS,YAAP,eAAqBC,eAArB,eAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,CAAD,CAAO,CAC3BJ,QAAQ,CAAC,SAACD,KAAD,QAAWK,CAAAA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,WAAf,EAAX,EAAD,CAAR,CACD,CAFD,CAIAd,SAAS,CAAC,UAAM,CACd,GAAIe,CAAAA,IAAI,CAAG,GAAIC,CAAAA,MAAJ,WAAcV,KAAd,EAAX,CACA,GAAIO,CAAAA,KAAK,CAAGL,YAAY,CAACS,MAAb,CAAoB,SAACC,IAAD,QAC9BH,CAAAA,IAAI,CAACI,IAAL,CAAUD,IAAI,CAACE,IAAL,CAAUN,WAAV,EAAV,CAD8B,EAApB,CAAZ,CAGAT,OAAO,CAAC,SAACD,IAAD,QAAUS,CAAAA,KAAV,EAAD,CAAP,CACAQ,OAAO,CAACC,GAAR,CAAYhB,KAAZ,EACD,CAPQ,CAON,CAACA,KAAD,CAPM,CAAT,CASAN,SAAS,CAAC,UAAM,CACdC,KAAK,CAACsB,GAAN,CAAU,4CAAV,EAAwDC,IAAxD,CAA6D,SAACC,QAAD,CAAc,CACzEpB,OAAO,CAAC,SAACD,IAAD,QAAUqB,CAAAA,QAAQ,CAACrB,IAAnB,EAAD,CAAP,CACAK,eAAe,CAAC,SAACD,YAAD,QAAkBiB,CAAAA,QAAQ,CAACrB,IAA3B,EAAD,CAAf,CACD,CAHD,EAID,CALQ,CAKN,EALM,CAAT,CAOA,mBACE,aAAK,SAAS,CAAC,iBAAf,wBACE,aAAK,SAAS,CAAC,aAAf,wBACE,mEADF,cAEE,cACE,IAAI,CAAC,MADP,CAEE,WAAW,CAAC,iBAFd,CAGE,YAAY,CAAC,KAHf,CAIE,IAAI,CAAC,MAJP,CAKE,QAAQ,CAAEM,aALZ,EAFF,GADF,cAWE,YAAK,SAAS,CAAC,eAAf,UACGN,IAAI,CAACsB,MAAL,CAAc,CAAd,CACCtB,IAAI,CAACuB,GAAL,CAAS,SAACC,OAAD,qBAAa,KAAC,IAAD,EAAM,EAAE,CAAEA,OAAO,CAACC,EAAlB,CAAsB,IAAI,CAAED,OAAO,CAACR,IAApC,EAAb,EAAT,CADD,cAEC,0DAHJ,EAXF,GADF,CAoBD,CAED,cAAejB,CAAAA,GAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Card from \"./components/Card/Card\";\nimport \"./App.css\";\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [input, setInput] = useState([]);\n  const [originalData, setOriginalData] = useState([]);\n\n  const changeHandler = (e) => {\n    setInput((input) => e.target.value.toLowerCase());\n  };\n\n  useEffect(() => {\n    var patt = new RegExp(`${input}`);\n    let value = originalData.filter((word) =>\n      patt.test(word.name.toLowerCase())\n    );\n    setData((data) => value);\n    console.log(input);\n  }, [input]);\n\n  useEffect(() => {\n    axios.get(\"https://jsonplaceholder.typicode.com/users\").then((response) => {\n      setData((data) => response.data);\n      setOriginalData((originalData) => response.data);\n    });\n  }, []);\n\n  return (\n    <div className=\"searchContainer\">\n      <div className=\"alignCenter\">\n        <h3>A Simple Example to List & Search Usernames</h3>\n        <input\n          type=\"text\"\n          placeholder=\"Search the list\"\n          autocomplete=\"off\"\n          name=\"name\"\n          onChange={changeHandler}\n        />\n      </div>\n      <div className=\"dataContainer\">\n        {data.length > 0  ?\n          data.map((element) => <Card id={element.id} name={element.name} />) :\n          <h4>No Users match the search criteria</h4>  \n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}